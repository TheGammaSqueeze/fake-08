name: fake-08

on:
  push:
    branches: '**'
  pull_request:
    branches: [ $default-branch ]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules : recursive

      - name: Build
        run: make tests

  threeDS:
    name: 3DS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules : recursive

      - name: Build
        run: |
          docker run -e ENABLE_COMPATIBILITY_REPORTING -v $GITHUB_WORKSPACE:/build_dir devkitpro/devkitarm /bin/bash -ex /build_dir/.github/workflows/build3ds.sh
      
      - uses: actions/upload-artifact@v3
        with:
          name: Nintendo 3DS
          path: |
            platform/3ds/*.3dsx
            platform/3ds/*.cia

  switch-standalone:
    name: Switch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules : recursive

      - name: Build
        run: |
          docker run -e ENABLE_COMPATIBILITY_REPORTING -v $GITHUB_WORKSPACE:/build_dir devkitpro/devkita64 /bin/bash -ex /build_dir/.github/workflows/buildSwitch.sh
      - uses: actions/upload-artifact@v3
        with:
          name: Nintendo Switch
          path: |
            platform/switch/*.nro

  wiiu-standalone:
    name: WiiU
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules : recursive

      - name: Build
        run: |
          docker run -e ENABLE_COMPATIBILITY_REPORTING -v $GITHUB_WORKSPACE:/build_dir jondbell/devkitppc-wiiu-sdl2 /bin/bash -ex /build_dir/.github/workflows/buildWiiU.sh
      - uses: actions/upload-artifact@v3
        with:
          name: Nintendo Wii U
          path: |
            platform/wiiu/*.rpx

  vita-standalone:
    name: Vita
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules : recursive

      - name: Build
        run: |
          docker run -e ENABLE_COMPATIBILITY_REPORTING -v $GITHUB_WORKSPACE:/build_dir gnuton/vitasdk-docker:20220413 /bin/sh -ex /build_dir/.github/workflows/buildVita.sh
      - uses: actions/upload-artifact@v3
        with:
          name: PS Vita
          path: |
            platform/vita/*.vpk

  bittboy-standalone:
    name: Bittboy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules : recursive

      - name: Build
        run: |
          docker run -e ENABLE_COMPATIBILITY_REPORTING -v $GITHUB_WORKSPACE:/build_dir mcejp/arm-miyoo-linux-musleabi-gcc /bin/sh -ex /build_dir/.github/workflows/buildBittboy.sh
      - uses: actions/upload-artifact@v3
        with:
          name: Bittboy
          path: |
            platform/bittboy/FAKE08
            platform/bittboy/pico8.elf

  miyoomini-standalone:
    name: MiyooMini
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules : recursive

      - name: Build
        run: |
          docker run -e ENABLE_COMPATIBILITY_REPORTING -v $GITHUB_WORKSPACE:/build_dir jondbell/union-miyoomini-toolchain /bin/sh -ex /build_dir/.github/workflows/buildMiyooMini.sh
      - uses: actions/upload-artifact@v3
        with:
          name: MiyooMini
          path: |
            platform/miyoomini/FAKE08

  opendingux-standalone:
    name: Opendingux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules : recursive

      - name: Build
        run: |
          docker run -e ENABLE_COMPATIBILITY_REPORTING -v $GITHUB_WORKSPACE:/build_dir jondbell/gcw0 /bin/sh -ex /build_dir/.github/workflows/buildGcw0.sh
      - uses: actions/upload-artifact@v3
        with:
          name: Gcw0
          path: |
            platform/gcw0/fake08_gcw0.opk

  funkey-standalone:
    name: Funkey-S
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules : recursive

      - name: Build
        run: |
          docker run -e ENABLE_COMPATIBILITY_REPORTING -v $GITHUB_WORKSPACE:/build_dir funkeyproject/funkey-os /bin/sh -ex /build_dir/.github/workflows/buildFunkey-S.sh
      - uses: actions/upload-artifact@v3
        with:
          name: Funkey
          path: |
            platform/funkey/fake08

  android-libretro:
    name: android-libretro
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules : recursive

      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r21e

      - name: Build
        run: cd platform/libretro/jni && ndk-build

      - name: Rename Artifacts
        run: | 
          cp platform/libretro/libs/arm64-v8a/libfake08.so platform/libretro/libs/libfake08-arm64.so && 
          cp platform/libretro/libs/armeabi-v7a/libfake08.so platform/libretro/libs/libfake08-arm32.so

      - uses: actions/upload-artifact@v3
        with:
          name: Android-Libretro
          path: |
            platform/libretro/libs/libfake08-arm64.so
            platform/libretro/libs/libfake08-arm32.so
            platform/libretro/fake08_libretro.info
  
  miyoomini-libretro:
    name: MiyooMini-libretro
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules : recursive

      - name: Build
        run: |
          docker run -e ENABLE_COMPATIBILITY_REPORTING -v $GITHUB_WORKSPACE:/build_dir jondbell/union-miyoomini-toolchain /bin/sh -ex /build_dir/.github/workflows/buildMiyooMini-libretro.sh

      - uses: actions/upload-artifact@v3
        with:
          name: MiyooMini-libretro
          path: |
            platform/libretro/fake08_libretro_miyoomini.so
            platform/libretro/fake08_libretro.info
            platform/libretro/miyoomini/launch.sh

  opendingux-libretro:
    name: GCW0-libretro
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules : recursive

      - name: Build
        run: |
          docker run -e ENABLE_COMPATIBILITY_REPORTING -v $GITHUB_WORKSPACE:/build_dir jondbell/gcw0 /bin/sh -ex /build_dir/.github/workflows/buildGcw0-libretro.sh

      - uses: actions/upload-artifact@v3
        with:
          name: GCW0-libretro
          path: |
            platform/libretro/fake08_libretro_gcw0.so
            platform/libretro/fake08_libretro.info